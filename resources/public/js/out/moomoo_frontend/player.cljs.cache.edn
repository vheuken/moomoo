{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name moomoo-frontend.player, :imports nil, :requires {g moomoo-frontend.globals, moomoo-frontend.globals moomoo-frontend.globals}, :uses nil, :defs {while-playing {:protocol-inline nil, :meta {:file "/home/vincent/Workspace/moomoo/src/frontend/player.cljs", :line 4, :column 7, :end-line 4, :end-column 20, :arglists (quote ([]))}, :name moomoo-frontend.player/while-playing, :variadic false, :file "src/frontend/player.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, duration {:protocol-inline nil, :meta {:file "/home/vincent/Workspace/moomoo/src/frontend/player.cljs", :line 7, :column 7, :end-line 7, :end-column 15, :arglists (quote ([]))}, :name moomoo-frontend.player/duration, :variadic false, :file "src/frontend/player.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load-track! {:protocol-inline nil, :meta {:file "/home/vincent/Workspace/moomoo/src/frontend/player.cljs", :line 13, :column 7, :end-line 13, :end-column 18, :arglists (quote ([sound-url sound-id on-load-callback]))}, :name moomoo-frontend.player/load-track!, :variadic false, :file "src/frontend/player.cljs", :end-column 18, :method-params ([sound-url sound-id on-load-callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 3, :fn-var true, :arglists (quote ([sound-url sound-id on-load-callback]))}, play-track! {:protocol-inline nil, :meta {:file "/home/vincent/Workspace/moomoo/src/frontend/player.cljs", :line 19, :column 7, :end-line 19, :end-column 18, :arglists (quote ([sound-id position on-finish-callback]))}, :name moomoo-frontend.player/play-track!, :variadic false, :file "src/frontend/player.cljs", :end-column 18, :method-params ([sound-id position on-finish-callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([sound-id position on-finish-callback]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:volume :current-sound-id}, :order [:current-sound-id :volume]}, :doc nil}